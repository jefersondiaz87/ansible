---
- name: VMware Cloud Director Onboarding - AWX Orchestration
  hosts: localhost
  connection: local
  gather_facts: no

  vars:
    # ‚öôÔ∏è Variables de conexi√≥n al VCD ‚Äî inyectadas desde credenciales de AWX
    vcd_hostname: "{{ lookup('env', 'VCD_HOST') }}"
    vcd_org: "{{ lookup('env', 'VCD_ORG') }}"
    vcd_user: "{{ lookup('env', 'VCD_USER') }}"
    vcd_password: "{{ lookup('env', 'VCD_PASSWORD') }}"
    vcd_verify_ssl_certs: "{{ lookup('env', 'VCD_VERIFY_SSL_CERTS') | default(false) }}"
    vcd_api_version: "{{ lookup('env', 'VCD_API_VERSION') | default('39.1') }}"

    # üì¶ Datos din√°micos ‚Äî enviados desde survey o extra_vars
    orgFullName: "{{ orgFullName }}"
    orgVdcName: "{{ orgVdcName }}"
    cpuQuota: "{{ cpuQuota }}"
    memoryQuota: "{{ memoryQuota }}"
    storageQuota: "{{ storageQuota }}"
    mail: "{{ mail }}"
    firstName: "{{ firstName }}"
    lastName: "{{ lastName }}"
    networkType: "{{ networkType }}"
    trial: "{{ trial | default(false) }}"

# =======================================
# Autenticaci√≥n directa a VCD (sin pyvcloud)
# =======================================

- name: Obtener token OAuth desde VCD
  ansible.builtin.uri:
    url: "{{ vcd_hostname }}/oauth/provider/token"
    method: POST
    headers:
      Content-Type: "application/x-www-form-urlencoded"
    body: "grant_type=refresh_token&refresh_token={{ vcd_apikey }}"
    body_format: form-urlencoded
    return_content: yes
    validate_certs: false
  register: vcd_auth_response

- name: Guardar token JWT
  ansible.builtin.set_fact:
    vcd_access_token: "{{ vcd_auth_response.json.access_token }}"

- name: Mostrar token temporal (debug)
  debug:
    msg: "Token JWT generado: {{ vcd_access_token | default('NO DEFINIDO') }}"

- name: Validar autenticaci√≥n exitosa
  ansible.builtin.debug:
    msg: "‚úÖ Token obtenido correctamente para VCD: {{ vcd_access_token[:20] }}..."

  roles:
    - role: auth
    - role: organization
    - role: orgvcd
    - role: network
#    - role: usermanagement
#    - role: email
