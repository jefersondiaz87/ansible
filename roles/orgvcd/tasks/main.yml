---
# ===========================================================
# VALIDAR SI EL ORG VDC YA EXISTE
# ===========================================================
- name: Verificar si el Org VDC ya existe en VMware Cloud Director
  uri:
    url: "{{ vcd_host }}/api/query?type=orgVdc&filter=name=={{ orgVdcName }}"
    method: GET
    headers:
      Accept: "application/*+json;version={{ vcd_api_version }}"
      Authorization: "Bearer {{ vcd_token }}"
    return_content: yes
  register: vdc_check
  delegate_to: localhost
  failed_when: vdc_check.status not in [200, 201]

- name: Determinar si el Org VDC ya existe
  set_fact:
    vdc_exists: "{{ (vdc_check.json.record is defined) and (vdc_check.json.record | length > 0) }}"

- name: Mostrar estado del VDC
  debug:
    msg: "ðŸ’¡ Org VDC '{{ orgVdcName }}' {{ 'ya existe' if vdc_exists else 'no existe, se procederÃ¡ a crear' }}."

# ===========================================================
# CREAR EL ORG VDC (SI NO EXISTE)
# ===========================================================
- name: Crear Org VDC en VMware Cloud Director vÃ­a REST
  when: not vdc_exists
  uri:
    url: "{{ vcd_host }}/api/orgVdc"
    method: POST
    headers:
      Accept: "application/*+json;version={{ vcd_api_version }}"
      Authorization: "Bearer {{ vcd_token }}"
      Content-Type: "application/json"
    body_format: json
    body:
      name: "{{ orgVdcName }}"
      org: "{{ orgFullName }}"
      providerVdcName: "{{ providerVdc | default('ProviderVDC-Default') }}"
      allocationModel: "ReservationPool"
      computeCapacity:
        cpu:
          allocated: "{{ cpuQuota | int }}"
          limit: "{{ cpuQuota | int }}"
        memory:
          allocated: "{{ memoryQuota | int }}"
          limit: "{{ memoryQuota | int }}"
      storageProfiles:
        - name: "{{ storageProfile | default('Standard') }}"
          limit: "{{ storageQuota | int }}"
      isEnabled: true
      networkPoolName: "{{ networkPool | default('Default-NetworkPool') }}"
      usesFastProvisioning: true
  register: vdc_create
  delegate_to: localhost
  failed_when: vdc_create.status not in [200, 201, 202]

- name: Confirmar creaciÃ³n del Org VDC
  when: not vdc_exists
  debug:
    msg: "âœ… Org VDC '{{ orgVdcName }}' creado exitosamente."

# ===========================================================
# AGREGAR / ACTUALIZAR METADATA (TRIALMODE)
# ===========================================================
- name: Asignar metadata TrialMode al Org VDC
  uri:
    url: "{{ vcd_host }}/api/vdc/{{ orgVdcName }}/metadata"
    method: PUT
    headers:
      Accept: "application/*+json;version={{ vcd_api_version }}"
      Authorization: "Bearer {{ vcd_token }}"
      Content-Type: "application/json"
    body_format: json
    body:
      metadata:
        - key: "TrialMode"
          value: "{{ 'true' if trial else 'false' }}"
          type: "STRING"
  register: metadata_update
  delegate_to: localhost
  failed_when: metadata_update.status not in [200, 201, 202]

- name: Confirmar metadata aplicada
  debug:
    msg: "ðŸŸ¢ Metadata 'TrialMode={{ 'true' if trial else 'false' }}' aplicada correctamente al Org VDC '{{ orgVdcName }}'."
