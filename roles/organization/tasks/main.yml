---
# ============================================
# PLAYBOOK: CREAR / ELIMINAR ORG Y AGREGAR METADATA
# ============================================

# =======================================
# 1Ô∏è‚É£ VERIFICAR SI LA ORGANIZACI√ìN YA EXISTE
# =======================================
- name: Obtener lista de organizaciones para verificar si ya existe
  ansible.builtin.uri:
    url: "{{ vcd.host }}/api/org"
    method: GET
    headers:
      x-vcloud-authorization: "{{ vcd.access_token }}"
      Accept: "application/*+xml;version={{ vcd.api_version }}"
    validate_certs: "{{ vcd.verify_ssl | default(false) }}"
  register: org_list

- name: Determinar si la organizaci√≥n ya existe y obtener su MOID
  set_fact:
    org_data: "{{ (org_list.content | from_xml).Org | selectattr('name','equalto', vcd.orgFullName) | list | first }}"
    org_exists: "{{ (org_list.content | from_xml).Org | selectattr('name','equalto', vcd.orgFullName) | list | length > 0 }}"

- name: Obtener el MOID de la organizaci√≥n si existe
  set_fact:
    org_moid: "{{ org_data.href | regex_search('.*\\/(.*)$', '\\1') | first }}"
  when: org_exists

# =======================================
# 2Ô∏è‚É£ CREAR ORGANIZACI√ìN SI NO EXISTE
# =======================================
- name: Crear organizaci√≥n en VMware Cloud Director via REST
  ansible.builtin.uri:
    url: "{{ vcd.host }}/api/admin/orgs"
    method: POST
    headers:
      x-vcloud-authorization: "{{ vcd.access_token }}"
      Accept: "application/vnd.vmware.admin.organization+xml;version={{ vcd.api_version }}"
      Content-Type: "application/vnd.vmware.admin.organization+xml"
    body_format: xml
    body: |
      <AdminOrg xmlns="http://www.vmware.com/vcloud/v1.5" name="{{ vcd.orgFullName }}">
        <FullName>{{ vcd.orgFullName }}</FullName>
        <Settings>
            <OrgGeneralSettings>
                <CanPublishCatalogs>true</CanPublishCatalogs>
            </OrgGeneralSettings>
        </Settings>
      </AdminOrg>
    status_code: [201]
    validate_certs: "{{ vcd.verify_ssl | default(false) }}"
  register: org_create
  when: not org_exists

- name: Mostrar resultado de la creaci√≥n
  debug:
    msg: >
      {% if org_exists %}
        ‚ö†Ô∏è La organizaci√≥n '{{ vcd.orgFullName }}' ya existe
      {% else %}
        ‚úÖ Organizaci√≥n creada: {{ org_create.location }}
      {% endif %}

# =======================================
# 3Ô∏è‚É£ AGREGAR METADATA TRIALMODE
# =======================================
- name: Obtener el MOID de la organizaci√≥n para agregar metadata
  set_fact:
    org_moid_metadata: "{{ org_create.location | regex_search('.*\\/(.*)$', '\\1') | first }}"
  when: not org_exists and trial | bool

- name: Obtener MOID de organizaci√≥n existente para metadata
  set_fact:
    org_moid_metadata: "{{ org_moid }}"
  when: org_exists and trial | bool

- name: Agregar metadata TrialMode si trial=true
  ansible.builtin.uri:
    url: "{{ vcd.host }}/api/org/{{ org_moid_metadata }}/metadata"
    method: POST
    headers:
      x-vcloud-authorization: "{{ vcd.access_token }}"
      Accept: "application/vnd.vmware.vcloud.metadata+xml;version={{ vcd.api_version }}"
      Content-Type: "application/vnd.vmware.vcloud.metadata+xml"
    body_format: xml
    body: |
      <Metadata xmlns="http://www.vmware.com/vcloud/v1.5">
        <MetadataEntry>
          <Key>TrialMode</Key>
          <Value>true</Value>
        </MetadataEntry>
      </Metadata>
    status_code: [200, 201]
    validate_certs: "{{ vcd.verify_ssl | default(false) }}"
  register: metadata_set
  when: trial | bool

- name: Mostrar metadata agregada
  debug:
    msg: "üè∑Ô∏è Metadata TrialMode agregada a {{ vcd.orgFullName }}"
  when: trial | bool

# =======================================
# 4Ô∏è‚É£ ELIMINAR ORGANIZACI√ìN SI cleanup=true
# =======================================
- name: Eliminar organizaci√≥n si cleanup=true
  ansible.builtin.uri:
    url: "{{ vcd.host }}/api/admin/org/{{ org_moid }}"
    method: DELETE
    headers:
      x-vcloud-authorization: "{{ vcd.access_token }}"
      Accept: "application/xml;version={{ vcd.api_version }}"
    status_code: [204]
    validate_certs: "{{ vcd.verify_ssl | default(false) }}"
  register: org_delete
  when: cleanup | default(false) | bool and org_exists

- name: Mostrar resultado de eliminaci√≥n
  debug:
    msg: "üóëÔ∏è Organizaci√≥n {{ vcd.orgFullName }} (MOID: {{ org_moid }}) eliminada (cleanup activado)"
  when: cleanup | default(false) | bool and org_exists
