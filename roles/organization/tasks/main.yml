---
# playbook: create_org_and_admin.yml
# Crea una Organization y un usuario administrador en VMware Cloud Director usando un script Python

- name: "‚úÖ Crear organizaci√≥n en VMware Cloud Director (via Python SDK)"
  vars:
    org_params:
      host: "{{ vcd.host }}"
      user: "{{ vcd.user }}"
      password: "{{ vcd.password }}"
      org_name: "{{ vcd.orgFullName }}"
      full_name: "{{ vcd.orgFullName }}"
  ansible.builtin.command: >
    python3 {{ role_path }}/files/crear_org_vcd.py '{{ org_params | to_json }}'
  register: org_create
  changed_when: "'created' in org_create.stdout"
  failed_when: org_create.rc != 0
  ignore_errors: yes

- name: "üîç Mostrar resultado de creaci√≥n de organizaci√≥n"
  debug:
    msg: "{{ org_create.stdout | from_json }}"

- name: "‚úÖ Crear usuario administrador en la organizaci√≥n"
  when: org_create.stdout is search('created') or org_create.stdout is search('already')
  ansible.builtin.uri:
    url: "{{ vcd.host }}/cloudapi/1.0.0/orgs/{{ vcd.orgId }}/users"
    method: POST
    headers:
      x-vcloud-authorization: "{{ vcd.access_token }}"
      Content-Type: "application/json"
      Accept: "application/json;version={{ vcd.api_version }}"
    body_format: json
    body:
      name: "admin_{{ vcd.orgFullName | lower | replace(' ', '_') }}"
      password: "{{ vcd.adminPassword }}"
      description: "Usuario admin de la organizaci√≥n"
      role: "organizationAdministrator"
      email: "{{ vcd.mail }}"
      enabled: true
    status_code: [201, 409]
    validate_certs: "{{ vcd.verify_ssl }}"
  register: admin_create
  ignore_errors: yes

- name: "‚ÑπÔ∏è Verificar si el usuario admin ya existe"
  set_fact:
    admin_exists: "{{ admin_create.status == 409 }}"

- name: "üîπ Mostrar resultado del usuario admin"
  debug:
    msg: >
      {% if admin_exists %}
        ‚ö†Ô∏è El usuario admin ya existe en '{{ vcd.orgFullName }}'
      {% else %}
        ‚úÖ Usuario admin creado correctamente en '{{ vcd.orgFullName }}'
      {% endif %}
